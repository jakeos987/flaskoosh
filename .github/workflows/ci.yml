name: CI and Deploy with Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests pymysql

      - name: Run Flask (background)
        run: |
          nohup python app.py &
          sleep 20

      - name: Build test container
        run: docker build -t server_test ./servertest

      - name: Run test container
        run: docker run --name server_test_container --network host server_test || true

      - name: Show test logs
        if: always()
        run: docker logs server_test_container

      - name: Run pytest
        run: |
          python -m pytest -v || true

      - name: Stop Flask
        if: always()
        run: |
          pkill -f "python app.py" || true

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t my_project_image:latest .

      - name: Save image as tar
        run: docker save my_project_image:latest -o project_image.tar

      - name: Upload image to runner tmp
        uses: actions/upload-artifact@v4
        with:
          name: project_image
          path: project_image.tar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      DEPLOY_HOST: ec2-3-89-223-139.compute-1.amazonaws.com
      DEPLOY_USER: ec2-user
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: project_image
          path: .

      - name: Copy image to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "project_image.tar"
          target: "/tmp/project_image.tar"

      - name: Install Docker on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            sudo yum update -y || sudo apt-get update -y
            if command -v yum >/dev/null 2>&1; then
              sudo amazon-linux-extras enable docker
              sudo yum install -y docker
              sudo service docker start
              sudo usermod -aG docker ec2-user
            fi
            if command -v apt-get >/dev/null 2>&1; then
              sudo apt-get install -y docker.io
              sudo systemctl start docker
              sudo usermod -aG docker $USER
            fi

      - name: Load image and run container on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            sudo mkdir -p /var/test_for_check
            sudo mv /tmp/project_image.tar /var/test_for_check/
            cd /var/test_for_check
            sudo docker load -i project_image.tar
            sudo docker stop my_app || true
            sudo docker rm my_app || true
            sudo docker run -d --name my_app -p 80:5000 my_project_image:latest
            sudo docker ps -a
