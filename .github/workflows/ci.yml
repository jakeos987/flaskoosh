name: CI and Deploy with Docker Compose

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests pymysql

      - name: Run Flask (background)
        run: |
          nohup python app.py &
          sleep 20

      - name: Run test container
        run: docker build -t server_test ./servertest && docker run --rm server_test || true

      - name: Run pytest
        run: |
          python -m pytest -v || true

      - name: Stop Flask
        if: always()
        run: |
          pkill -f "python app.py" || true

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Build project image
        run: docker build -t my_project_image:latest .

      - name: Save Docker image
        run: docker save my_project_image:latest -o project_image.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: project_image
          path: project_image.tar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      DEPLOY_HOST: ec2-3-89-223-139.compute-1.amazonaws.com   # עדכן לפי ה-EC2 שלך
      DEPLOY_USER: ec2-user
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: project_image
          path: .

      - name: Copy image to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "project_image.tar"
          target: "/tmp/project_image.tar"

      - name: Load image and run with docker-compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            sudo mkdir -p /var/test_for_check
            cd /var/test_for_check

            # לטעון את האימייג' ששלחנו
            sudo docker load -i /var/test_for_check/project_image.tar

            # ליצור docker-compose.yml
            cat <<EOF | sudo tee docker-compose.yml
            version: "3.8"
            services:
              app:
                image: my_project_image:latest
                container_name: flask_app
                ports:
                  - "80:5000"
                environment:
                  DB_HOST: mysql
                  DB_NAME: flask
                  DB_USER: flask
                  DB_PASSWORD: password
                depends_on:
                  - mysql

              mysql:
                image: mysql:5.7
                container_name: flask_mysql
                restart: unless-stopped
                environment:
                  MYSQL_ROOT_PASSWORD: password
                  MYSQL_DATABASE: flask
                  MYSQL_USER: flask
                  MYSQL_PASSWORD: password
                volumes:
                  - mysql-data:/var/lib/mysql
                ports:
                  - "3306:3306"

            volumes:
              mysql-data:
            EOF

            # להריץ את הקומפוז
            sudo docker-compose down || true
            sudo docker-compose up -d
