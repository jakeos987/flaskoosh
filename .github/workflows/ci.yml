name: CI and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests pymysql

      - name: Run Flask (background)
        run: |
          nohup python app.py &
          sleep 20

      - name: Build test container
        run: docker build -t server_test ./servertest

      - name: Run test container
        run: docker run --name server_test_container --network host server_test || true

      - name: Show test logs
        if: always()
        run: docker logs server_test_container

      - name: Run pytest
        run: |
          python -m pytest -v || true

      - name: Stop Flask
        if: always()
        run: |
          pkill -f "python app.py" || true

      - name: Build project image
        run: docker build -t my_project_image:latest .

      - name: Save image as artifact
        run: docker save my_project_image:latest -o project_image.tar

      - name: Upload image artifact
        uses: actions/upload-artifact@v4
        with:
          name: project_image
          path: project_image.tar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      DEPLOY_HOST: 3.89.223.139         # ה-IP או ה-DNS של ה-EC2 שלך
      DEPLOY_USER: ec2-user
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: project_image
          path: .

      - name: Copy image to EC2
        uses: appleboy/scp-action@v0.1.9   # גרסה עדכנית
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "project_image.tar"
          target: "/tmp/project_image.tar"

      - name: Install Docker & Docker Compose on EC2
        uses: appleboy/ssh-action@v1.2.1   # גרסה עדכנית
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            if ! command -v docker &> /dev/null
            then
              echo "Installing Docker..."
              sudo yum update -y
              sudo amazon-linux-extras install docker -y
              sudo service docker start
              sudo usermod -aG docker ec2-user
            fi

            if ! command -v docker-compose &> /dev/null
            then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            docker --version
            docker-compose --version

      - name: Load image and run container with docker-compose
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            sudo mkdir -p /var/test_for_check
            cd /var/test_for_check

            # טוען את האימג'
            sudo docker load -i /tmp/project_image.tar

            # אם יש קומפוז קודם – מפיל אותו
            sudo docker-compose down || true

            # מריץ קומפוז (אתה צריך לשים docker-compose.yml ברפו שלך!)
            sudo docker-compose up -d
