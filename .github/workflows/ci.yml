name: CI and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install requests pymysql

      - name: Run tests
        run: |
          echo "âœ… Running tests..."
          pytest -v || true

      - name: Build Docker image
        run: |
          docker build -t my_project_image:latest .

      - name: Save image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: project_image
          path: project_image.tar
        run: docker save my_project_image:latest -o project_image.tar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      DEPLOY_HOST: 3.89.223.139
      DEPLOY_USER: ec2-user
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v4
        with:
          name: project_image
          path: .

      - name: Copy image to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          source: "project_image.tar"
          target: "/tmp/project_image.tar"

      - name: Install Docker & Docker Compose on EC2
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            echo "ðŸ”§ Installing dependencies..."
            sudo yum update -y
            sudo yum install -y amazon-linux-extras
            sudo amazon-linux-extras enable docker
            sudo yum install -y docker
            sudo service docker start
            sudo usermod -aG docker ec2-user

            # ×ž×ª×§×™×Ÿ ×¡×¤×¨×™×•×ª ×—×¡×¨×•×ª
            sudo yum install -y compat-openssl11
            sudo yum install -y glibc
            sudo yum install -y libxcrypt-compat

            # ×ž×ª×§×™×Ÿ Docker Compose
            if ! command -v docker-compose &> /dev/null
            then
              echo "Installing Docker Compose..."
              sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
              sudo chmod +x /usr/local/bin/docker-compose
            fi

            docker --version
            docker-compose --version

      - name: Load image and run container with docker-compose
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            sudo mkdir -p /var/test_for_check
            cd /var/test_for_check

            echo "ðŸ“¦ Loading Docker image..."
            sudo docker load -i /tmp/project_image.tar

            echo "ðŸ›‘ Stopping old containers..."
            sudo docker-compose down || true

            echo "ðŸš€ Starting new container..."
            sudo docker-compose up -d

            echo "âœ… Deployment finished!"
